\inst tailcall (v0)

\prologue \{
#define fn v0
#define nargs i1
  int sendp = (get_opcode(insn) == TAILSEND)? TRUE: FALSE;
\}

\epilogue \{
#undef fn
#undef nargs
\}

\when v0:function \{
  set_fp(context, fp);
  set_pc(context, pc);
  tailcall_function(context, fn, nargs, sendp);
  update_context();
  NEXT_INSN_NOINCPC();
\}

\when v0:builtin \{
  set_fp(context, fp);
  set_pc(context, pc);
  tailcall_builtin(context, fn, nargs, sendp, FALSE);
  update_context();
  NEXT_INSN_INCPC();
\}

\otherwise \{
  LOG_EXIT("TAILCALL: not a function\n");
\}


