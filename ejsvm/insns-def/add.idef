\inst add (Register dst, Value v1, Value v2)

\when v1:fixnum && v2:fixnum \{
  cint s = fixnum_to_cint(v1) + fixnum_to_cint(v2);
  dst = cint_to_number(s);
\}

\when v1:string && (v2:fixnum || v2:flonum || v2:special) \{
  v2 = to_string(context, v2);
  goto USELABEL(STRSTR);
\}

\when (v1:fixnum || v1:flonum || v1:special) && v2:string \{
  v1 = to_string(context, v1);
  goto USELABEL(STRSTR);
\}

\when v1:string && v2:string \{
DEFLABEL(STRSTR):
  dst = ejs_string_concat(context, v1, v2);
\}

\when (v1:regexp || v1:number_object || v1:boolean_object || v1:builtin || v1:string_object || v1:simple_object || v1:array || v1:function) && (v2:fixnum || v2:flonum || v2:special || v2:string) \{
  v1 = object_to_string(context, v1);
  goto USELABEL(HEAD);
\}

\when (v2:regexp || v2:number_object || v2:boolean_object || v2:builtin || v2:string_object || v2:simple_object || v2:array || v2:function) && (v1:fixnum || v1:flonum || v1:special || v1:string) \{
  v2 = object_to_string(context, v2);
  goto USELABEL(HEAD);
\}

\when (v1:regexp || v1:number_object || v1:boolean_object || v1:builtin || v1:string_object || v1:simple_object || v1:array || v1:function) && (v2:regexp || v2:number_object || v2:boolean_object || v2:builtin || v2:string_object || v2:simple_object || v2:array || v2:function) \{
  v1 = object_to_string(context, v1);
  v2 = object_to_string(context, v2);
  goto USELABEL(HEAD);
\}

\otherwise \{
  double x1 = to_double(context, v1);
  double x2 = to_double(context, v2);
  dst = double_to_number(x1 + x2);
\}


