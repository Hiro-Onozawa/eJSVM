\inst mul (v1, v2)

\prologue \{
#define dst regbase[r0]
\}

\epilogue \{
#undef dst
\}

\when v1:fixnum && v2:fixnum \{
  cint n1, n2, p;
  n1 = fixnum_to_cint(v1);
  n2 = fixnum_to_cint(v2);
  if (half_fixnum_range(n1) && half_fixnum_range(n2)) {
    p = n1 * n2;
    dst = cint_to_fixnum(p);
  } else {
    p = (double) n1 * (double) n2;
    dst = double_to_number(p);
  }
\}

\when (v1:fixnum && v2:flonum) || (v1:flonum && v2:fixnum) || (v1:flonum && v2:flonum) \{
  double x1 = to_double(context, v1);
  double x2 = to_double(context, v2);
  dst = double_to_number(x1 * x2);
\}

\when v1:fixnum || v1:flonum \{
  v2 = to_number(context, v2);
  goto mul_HEAD;
\}

\when v2:fixnum || v2:flonum \{
  v1 = to_number(context, v1);
  goto mul_HEAD;
\}

\otherwise \{
  v1 = to_number(context, v1);
  v2 = to_number(context, v2);
  goto mul_HEAD;
\}
